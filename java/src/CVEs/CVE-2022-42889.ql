/**
 * @name Apache Commons Text Script Injection
 * @kind path-problem
 * @problem.severity error
 * @precision high
 * @id githubsecuritylab/act-script-injection
 * @tags security
 *       external/cwe/cwe-094
 */

import java
import semmle.code.java.dataflow.FlowSources
import ACTInjectionFlow::PathGraph

private module ACTInjectionConfig implements DataFlow::ConfigSig {
  predicate isSource(DataFlow::Node source) { source instanceof RemoteFlowSource }

  predicate isSink(DataFlow::Node sink) {
    exists(MethodAccess ma, Method m | ma.getMethod() = m and ma.getAnArgument() = sink.asExpr() |
      m.getName() = "replace" and
      m.getDeclaringType()
          .getASourceSupertype*()
          .hasQualifiedName("org.apache.commons.text", "StringSubstitutor")
      or
      m.getName() = "lookup" and
      m.getDeclaringType()
          .getASourceSupertype*()
          .hasQualifiedName("org.apache.commons.text.lookup", "AbstractStringLookup")
    )
  }
}

module ACTInjectionFlow = TaintTracking::Global<ACTInjectionConfig>;

from ACTInjectionFlow::PathNode source, ACTInjectionFlow::PathNode sink
where ACTInjectionFlow::flowPath(source, sink)
select sink.getNode(), source, sink, "Script injection"
